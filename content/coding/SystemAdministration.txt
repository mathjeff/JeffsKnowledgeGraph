# Information about System Administration

Linux files have permissions

  Each inode in Linux keeps track of which people can do which things to it

  The things a person can do to a file:

   * Read it
   * Write to it
   * Execute it

  The relationships a person can have to a file:
  * Owner of the file
  * Share a group with the file
  * Other (not the owner or in a group with it)

 - What is an inode?

What is an inode?

  An inode is a file or a directory

  A directory is sometimes also called a folder

What is a symlink?

  A symlink is a special type of file that points to another file.

  When a program reads from or writes to a symlink, it usually will instead read from or write to the file that the symlink points to.

How can I make a symlink?

  Run `ln -s <existingPath> <newName>` to make a symlink named `<newName>` pointing at `<existingPath>`

  The value of `<existingPath>` should either be an absolute filepath, or should be the relative path from the symlink's parent directory to the destination file.

  So, it's easiest if you don't use `/` in `<newName>`, because then you can use terminal tab completion to help you type `<existingPath>`

 - How can I read command help?
 - File paths
 - Terminal tab complete

Filesystem directory hierarchy

  Files in a computer are organized into directories (also known as folders).
  Each directory may contain files or directories
  Each file or directory can be accessed by its absolute path.

 - What is an inode?

How to see the permissions of a file

  To see the permissions of a file, you can do `ls -la <filename>`

  This might output something like this:

  ```
   $ ls -la example.sh
  -rwxrw-r-- 1 gasto gasto 0 Sep 13 19:01 example.sh
  ```

  There are 9 characters of permission information in this output.
  1. Three characters describe permissions for the owner

      The initial `rwx` means that the owner of the file can read it, write to it, and execute it

  1. Three characters describe permissions for users that share a group with the file

      The `rw-` means that other users in the same group as the file can read or write the file but not execute it

  1. Three characters describe permissions for other users

    The `r--` means that other users can read the file but not write it or execute it

 - Linux files have permissions

 - How can I read command help?

How to change the permissions of a file

  To change the permissions of a file, you can use `chmod <who><addOrRemove><permission> <file>`

  `who` can be 'u' for the owner, 'g' for users in the same group, or 'o' for other users

  `addOrRemove` should be '+' or '-'

  `permission` can be 'r' for reading, 'w' for writing, or 'x' for executing.

  For example, to allow the owner of a file to execute it, do `chmod u+x <file>`

 - How to see the permissions of a file
 - How can I read command help?

How to change the owner of a file

  To change the owner of a file, you can use `chown <newOwner> <file>`

 - How to see the permissions of a file
 - How can I read command help?

Why should I change the permissions of a file?

  * Security
      * It's possible that an untrustworthy person might get permission to log in to a system as a certain user
          * Maybe that person was given an account
          * Maybe that person acquired someone else's login credentials
          * Maybe that person found and took advantage of a security problem in another service running on the machine
      * If most login accounts don't have permissions to do most things, then it prevents an attacker from easily taking over the entire system

  * Bugs
      * If a program has a bug in it, it might accidentally try to modify or delete files that it's not supposed to. If it doesn't have permission to do this, it won't succeed in doing it.

  * Mistakes
      * If you accidentally type a harmful command into the terminal (for example a command that specifies to delete all files on the system), it would be nice for that command to fail rather than cause a problem
      * A common way to prevent this kind of thing is to remove your own permissions for taking these unwanted actions
      * If you later decide you do want to allow yourself to do these things anyway, you might have to switch accounts or modify the permissions of the file to allow yourself to modify it

 - Linux files have permissions

What is a port in networking?

  A port is an identifier that is used in routing traffic to a program on a computer.

  When someone starts a service, the service has to decide which port to listen on.

  When you access a service on another computer, your computer must know which port it is listening on.

  Two services cannot listen on the same port.

  The default port for web servers to listen on is port 80.

  The default port for an ssh server to listen on is port 22.

SSH Port Forwarding

  Port forwarding is a feature of `ssh` that allows it to listen on your computer for connections and pass them along to another computer.

  To ask `ssh` to forward a port, do `ssh -L <localPort>:localhost:<remotePort> <username>@<computer>`

  This will start an `ssh` process that listens for connections and passes them to along to `<computer>:<remotePort>`

  To cancel this, exit `ssh` by running `exit` in the same window

  Although it's possible to type other commands into this `ssh` session, this can be confusing so we don't recommend it:

  * Errors get reported in this terminal window, which might get in the way of output of other commands that you ran in the same window

      * If the remote computer isn't currently listening for connections on this port, then when something tries to connect to this port on your local computer, `ssh` will report an error

          * For example, if you shut down a Jupyter server running on the other computer while you still have a browser window open using it, your web browser will try to reconnect and `ssh` will report connection errors

  * If you want to stop the port forwarding, you will have to exit the `ssh` session

      * You'll have to stop any commands running in this window

      * It won't be as easy to see the history of commands that you ran in this session after closing this `ssh` session

 - What is a port in networking?
 - How can I read command help?
 - What is local in a computer?
 - What is a computer process?
 - What is ssh?

How can I run a Jupyter Notebook on a workstation from my laptop?

  On the workstation, start Juypter: `jupyter notebook --no-browser --port=8080` (if someone else is already using this port, choose another port).

  On your computer, forward the port: `ssh -L 8080:localhost:8080 <username>@<computer>`

  On your computer, open http://localhost:8080/ in a web browser

 - What is Jupyter Notebook?
 - Why using Jupyter Notebook?
 - What is ssh?
 - How can I ssh into another computer?
 - What is a port in networking?
 - SSH Port Forwarding

Why using Jupyter Notebook?

  I like Jupyter Notebook because it allows me to test a small session of code individually, without restarting the entire process (different than `python WHOLE_PROCESS.py`).

  It's also highly interactive that I can check and visualize the intermediate results easily :)

 - What is Jupyter Notebook?
 - What is Python?

What is Jupyter Notebook?

  Jupyter Notebook is a web-based tool that allows us to run live code and visualizations.

  It supports various programming languages, such as Python, R, and Julia.

  You can install Jupyter Notebook by `pip install jupyter` or `conda install -c conda-forge notebook`

  You can run Jupyter Notebook by `jupyter notebook`

 - What is Python?

How can I ssh into another computer?

  To ssh into another computer, type `ssh <username>@<computer>`

  This requires that `sshd` is running on the computer you want to connect to

  When you're done, you can type `exit` to exit

 - What is ssh?
 - Checking whether my computer can reach a certain host
 - Getting ssh credentials
 - Inspecting a computer process

Getting ssh credentials

  ssh accepts two types of credentials

  * username and password

  * ssh keys

 - Getting an ssh username and password
 - Enabling ssh keys

Enabling ssh keys

  Allowing someone to access a computer via ssh requires:

  * Making an ssh key pair

  * Asking the computer to trust this key pair by copying the public key to ~/.ssh/authorized_keys

  * Making sure that `sshd` is running

 - Getting a Linux user account
 - Getting ssh keys

Getting a Linux user account

  To make a Linux user account, try `sudo adduser <username>` and follow the prompts.

  If the computer tells you that you don't have permission to do this, find someone that does, and ask them to make an account for you.

Getting an ssh username and password

  Your ssh username and password should be the same as your Linux account username and password, if password authentication is enabled.

  Note that using an ssh password is likely to be less convenient (you have to type it every time) than an ssh key, and is also generally considered to be less secure

 - What is ssh?
 - Getting a Linux user account
 - Getting ssh keys

Getting ssh keys

  To generate an ssh key, you can run `ssh-keygen`.

 - What is an ssh key?

What is an ssh key?

  An ssh key is a pair of files that allow you to demonstrate your identity to others.

  One file is your private key which contains some secret text that is known only to you or your computer.

  One file is your public key which can be used to verify the information in the private key.

  * The name of this file should end with ".pub"

  ssh keys are verified in [a clever way](https://en.wikipedia.org/wiki/RSA_(cryptosystem)) so that it's not necessary to share the contents of your private key to demonstrate your identity.

What is ssh?

  SSH stands for Secure Shell.

  It lets you run commands on another computer that you enter into your own computer.

  SSH is a type of shell.

 - What is a shell?

What is my hostname?

  To get your computer's hostname, run `hostname -a` in a terminal

 - What is a terminal?

Checking whether my computer can reach a certain host

  To determine whether your computer can reach a certain ip address, run `ping <address>` or `ping <hostname>` in a terminal

 - How can I read command help?
 - What is a terminal?
 - What is my ip address?
 - What is my hostname?

What is my ip address?

  On Windows, run `ifconfig`

  On Linux, run `ipconfig`

 - What is an ip address?

What is an ip address?

  An ip address is a way for computers to refer to each other on a network.

  IPv4 addresses look like four numbers separated by dots, for example:

  `127.0.0.1`

How can I copy a file to or from another computer?

  You can copy a file to or from another computer using `scp`

  To send a file from your computer to another, run `scp <filepath> <remoteUsername>@<remoteHost>:<remotePath>` in a local shell

  To get a file from another computer to yours, run `scp <remoteUsername>@<remoteHost>:<remotePath> <filepath>` in a local shell

  If this doesn't work, check whether you can `ssh` into that computer

 - How can I ssh into another computer?
 - What is a shell?
 - What is local in a computer?

What is local in a computer?

  "Local" refers to a computer that you can physically access or information in that computer, rather than something behind a network.

  The device your are looking at now is considered local.

  The server that hosts JeffsKnowledgeGraph is not local; it is remote.

What is a bitmask?

  A bitmask:
  *  Is an integer whose representation has a fixed length
  *  Represents a list of bits
  *  Is intended to be applied to a second integer (of the same length) to produce a third integer (of the same length)
    *  To apply a bitmask to another integer:
        1. Split the bitmask into individual bits
        1. Split the input into individual bits
        1. Choose a binary function for combining corresponding bits
        1. For each bit in the bitmask and corresponding bit in the input, combine them as defined by the function
        1. Combine the resulting bits into a new number

  For example, if you have a bitmask of `9` and want to `and` it with `10`:
  1. Convert `9` to binary to get `1001`
  1. Convert `5` to binary to get `1010`
  1. For each pair of bits, compute the `and` of each one
      1. `1` and `1` is `1`
      1. `0` and `0` is `0`
      1. `0` and `1` is `0`
      1. `1` and `0` is `0`
  1. Concatenate the resulting bits to get `1000`
  1. These bits can be stored as a new number: `8`

What is a umask?

  A umask is a bitmask that controls the permissions that a new file or directory on your computer will have by default

  To view your user's umask, run `umask`

  Individual programs may still create files having different permissions.
  * For example, `unzip` may make files having fewer permissions if the contained `zip` file specifies fewer permissions.

 - What is a bitmask?
 - How to change the permissions of a file

What is multithreading?

  Multithreading is the idea of having one computer program with multiple threads, each of which can do something different

 - What is a computer program?

What is multiprocessing?

  Multiprocessing is the idea of having one computer process spawn other processes

 - What is a computer process?

What is parallelization?

  Parallelization is instructing a computer to do multiple tasks at the same time.

 - What is multithreading?
 - What is multiprocessing?

How do I open the Windows Task Manager?

  To [open the task manager](https://www.wikihow.com/Open-Windows-Task-Manager), press Ctrl-Shift-Esc

How long has my Linux computer been running?

  To see how long your Linux computer has been running since it was last started, run `uptime` like [here](https://www.geeksforgeeks.org/linux-uptime-command-with-examples/)

How busy are my CPUs using Linux?

  * To see how busy the CPUs in your computer have been, on average, since your computer started, run `mpstat` like [here](https://www.geeksforgeeks.org/check-cpu-utilization-linux-command/#check-cpu-utilization-mpstat-command)
  * To see how busy the CPUs in your computer are now, run `top` like [here](https://www.geeksforgeeks.org/check-cpu-utilization-linux-command/#top-command-to-view-linux-cpu-load)

 - How long has my Linux computer been running?

How busy are my CPUs using Windows?

  You can see this information in the Task Manager

 - How do I open the Windows Task Manager?

How busy is my memory using Linux?

  * To see a lot of information at once including memory usage, run `htop` like [here](https://www.geeksforgeeks.org/htop-command-in-linux-with-examples/) and look for the line that says "Mem"
      * The green bar indicates memory that is needed by running tasks
      * The yellow bar indicates memory that is used by the cache
  * To see a short, text-based description of the available memory, run `free -h` like [here](https://www.howtogeek.com/659529/how-to-check-memory-usage-from-the-linux-terminal/)

 - How long has my Linux computer been running?

How busy is my memory using Windows?

  * To view memory usage, open the task manager and click Performance

 - How do I open the Windows Task Manager?

How busy is my drive using Linux?

  * In Linux, to see the recent disk reads and writes (since the system started), run `iostat` like [here](https://www.geeksforgeeks.org/iostat-command-in-linux-with-examples/)

 - How long has my Linux computer been running?

How busy is my Linux computer?

 - How busy are my CPUs using Linux?
 - How busy is my memory using Linux?
 - How busy is my drive using Linux?

How busy is my Windows computer?

 - How busy are my CPUs using Windows?
 - How busy is my memory using Windows?

How busy is my computer?

 - How busy is my Linux computer?
 - How busy is my Windows computer?

Can I parallelize my program?

  Parallelization can be faster if your computer has extra capacity that it's not using.
  For example, if your computer has 2 CPUs and is only running one program, it can be faster to instead run two programs that each do half of the work.

 - What is parallelization?
 - How busy is my computer?

How can I parallelize my program?

  Parallelizing a program can involve either creating multiple processes or multiple threads

 - Can I parallelize my program?
 - What is multiprocessing?
 - What is multithreading?

Which partition is my file in?

  To list the partitions in the system, you can run `df -h`.
  Each partition is mounted to a specific directory.
  The most specific directory containing your filepath is the partition that the file belongs to.

  For example, if `df -h` says this:

  ```
  Filesystem 1K-blocks Used Available Use% Mounted on
  /dev/sda1  1000      100  900       10%  /
  /dev/sdb2  1000      200  800       10%  /media/other
  ```
  then:
  * files under the `/media/other` directory are stored in the `/dev/sdb2` partition
  * files that are not under the `/media/other` directory are stored in the `/dev/sda1` partition

 - What is a partition?

What is a partition?

  A partition is a special, named section of one or more drives

  A drive must have at least one partition to allow writing to it

Why do computers have partitions?

  * One drive can be split into multiple partitions that each has its own size limit.

      * This can ensure that a process writing to one partition can't cause another process writing to another partition to run out of space.

 - What is a partition?
 - Preparing for mistakes

How can I compress a file or directory?
 - How can I compress a directory?
 - How can I compress a file?

How can I compress a directory?
  An easy way to compress a directory is via `zip -r <zipFileName> [<directoryName>...]`

  Later:
  * To regenerate this directory, you can run `unzip <zipFileName> -d <destinationDirectory>`
  * To simply view a list of files stored in the .zip, you can run `unzip -l <zipFileName>`

 - How can I read command help?

How can I compress a file?

  An easy way to compress a file is via `gzip <file>`.

  Later:
  * To uncompress the file, regenerate the original file, and remove the uncompressed file, you can run `gunzip <file>.gz`
  * To simply view the original contents of the uncompressed file, you can run `zcat <file>.gz`

 - How can I read command help?
