# Information about algorithms

What is a hash table?

  A hash table is a collection that attempts to provide very fast performance via the use of hash codes.

  When a hash table is created (and sometimes when a new item is inserted), the hash table chooses a capacity and allocates an array of that many bins (and moves existing entries into the array if the collection was already nonempty). Each bin is intended to hold one item (although some implementations allow more by putting a list into each bin).

  When a caller wants to put an item into a hash table, they provide a key and a value.
  The hash table applies its hash function to the key, to compute an integer, which is called a hash code of that key. Then it uses that hash code to compute a bin number, by dividing the hash code by the number of bins and taking the remainder. This key and value are then inserted as an entry in that hash bin.

  If no item is yet in that hash bin, the given value is put into that bin.
  If an item is already in that bin, then depending on the implementation of the hash table, it may:
  * Put the item in a new bin
  * Append the item to a list in that bin

  When a caller wants to get an item from a hash table, they provide a key. This key is then used to identify a hash bin in the same was as when inserting the item. If the given key exists in the hash table, it will be found in this bin. If the capacity of the hash table is more than the number of elements in the hash table, there will be an average of less than one item per bin. Then the hash table checks the keys in the bin to see which of them match, and returns the value for that key.

 - What is a hash function?

 - What is Big O notation?

A hash table is usually fast

  If the hash table's hash function is designed well such that different objects have different hash codes, then most bins in the hash table will have approximately an average number of items.

  So, in a hash table that is functioning well, most lookups will quickly find a bin with approximately one item. This makes hash tables very fast for large collections, usually `O(1)` for a lookup or insertion.

 - What is a hash table?

 - What is Big O notation?

What is a hash code?

  A hashcode is a number that represents some of the information from an object.

  A hashcode is computed by applying a hash function to an object.

What is a hash function?

  A hash function is a deterministic function that accepts a specific type of object and returns an arbitrary number.

  A hash function must return the same hash code for two objects that are equal

  A good hash function will usually return a different hash code for two objects that are not equal

  A good hash function should be fast.

 - What is a hash code?

What is a tree in computer science?

  A tree is a special type of graph.

  Each node in a tree either is the root node or has exactly one parent node.

  A tree isn't allowed to have cycles.

 - What is a graph in computer science?

What is a graph in computer science?

  A graph is a set of nodes that are connected by edges

What is a binary tree?

  A binary tree is a tree where each node has no more than two children

 - What is a tree in computer science?

What is a binary search tree?

  A binary search tree is a tree where each node is assigned a value and the values are sorted like this:

  * For every node `N` and every descendant `D`:
      * If `D` is descended from the left child of `N`, the value of `D` is less than or equal to the value of `N`

 - What is a binary tree?

How do you find an item in a binary search tree?

  To find an item in a binary search tree, you can use a binary search.

  Start at the root node, and compare your item to its value.
  * If your item has a larger value, move to the right child of the current node.
  * If your item has a smaller value, move to the left child of the current node.

  Repeat until you find a matching node or there are no nodes left to check, in which case the value is not present.

 - What is a binary search tree?

What is a balanced binary search tree?

  A balanced binary search tree is a binary search tree where these values:

  * the distance of the shortest path from the root node to any leaf node
  * the distance of the longest path from the root node to any leaf node

  differ by no more than 1.

 - What is a binary search tree?

A balanced binary search tree is fast

  If a binary search tree is balanced, then while searching for an item in it, each test should cut the number of nodes in half. This should usually be pretty fast: `O(n)` steps for a tree with `n` nodes.

  This is still usually not as fast as a lookup in a hash table (which is usually `O(1)` steps).

 - How do you find an item in a binary search tree?

 - What is a hash table?

 - What is Big O notation?

What is Big O notation?

  Big O notation is a precise way of describing approximately how much time an algorithm requires to run.

  If the runtime of an algorithm is `O(f(n))`, then it means there exists some constant `k` such that for every `n >= 1`, the runtime of the algorithm is no more than `k*f(n)`.

  For example, if an algorithm takes exactly `sqrt(n) + 1` steps to run, then:
  * It is correct correct to say that the algorithm is `O(sqrt(n))`
      * In this case we can use `k = 2`:
      * The algorithm takes no more than `k * sqrt(n)` steps to run for each `n >= 1`,
  * It is incorrect to say that the algorithm is `O(log(n))`
      * There is no contant `k` that we can find such that `sqrt(n) <= k * log(n)` for all `k >= 1`
  * It is misleading to say that the algorithm is `O(n)`.
      * This is technically a correct statement, but people don't say this because `O(sqrt(n))` is a better description
